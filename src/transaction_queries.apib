# Group Publisher Transaction Queries

## Publisher Transaction Queries

### List all TQs [GET]

### Create a TQ [POST]

### Delete a TQ [POST]

# Group Campaign Transaction Queries

## Campaign Transaction Queries [/campaign/{campaign_id}/tq]

### List all TQs [GET]

List all TQs for a campaign

+ Request (application/json; charset=utf-8)

+ Response 200 (application/json; charset=utf-8)
    + Attributes
        + transaction_queries (array[Transaction Query Wrapper])

## Approve Campaign Transaction Query [/campaign/{campaign_id}/tq/{tq_id}/approve]

### Approve a TQ [POST]

Approve a TQ

+ Request (application/json; charset=utf-8)

+ Response 200 (application/json; charset=utf-8)
    + Attributes
        + transaction_query (Transaction Query)

## Reject Campaign Transaction Query [/campaign/{campaign_id}/tq/{tq_id}/reject]

### Reject a TQ [POST]

+ Request (application/json; charset=utf-8)

+ Response 200 (application/json; charset=utf-8)
    + Attributes
        + transaction_query (Transaction Query)

## Batch Process Campaign Transaction Queries [/campaign/{campaign_id}/tq/process]

### Batch process TQs [POST]

## Transaction Query Reasons [/campaign/{campaign_id}/tq_reasons]

### List all TQ reasons [GET]

### Create a TQ reason [POST]

### Delete a TQ reason [POST]

## Transaction Query (object)
+ transaction_query_id: 100l1892 (required) - ID of the transaction query
+ transaction_query_type: untracked (required)
+ camref: i9sh
+ notes: `This is an example`
+ publisher_reference
+ publisher_id: 1l1007802 - ID of the publisher
+ campaign_id: 10l176 - ID of the campaign
+ conversion_date_time: `2016-01-01 00:00:00`
+ conversion_reference
+ conversion_id
+ conversion_value
+ conversion_currency: (Currency)
+ created_at: `2016-01-01 00:00:00`
+ updated_at: `2016-01-01 00:00:00`
+ current_state (enum)
    + pend
    + approve
    + reject
+ state_history
+ expected_commission
+ Include Campaign Wrapper
+ Include Publisher Wrapper
+ actions_available (array)

## Transaction Query Wrapper (object)
+ transaction_query (Transaction Query)